name: Publish Helm Chart
on:
  workflow_dispatch:
    inputs:
      increment_type:
        description: 'Type d''incrémentation de version'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml semver gitpython

      - name: Incrémenter la version du Chart
        id: version
        run: |
          # Récupère le type d'incrémentation depuis les inputs
          INCREMENT_TYPE="${{ github.event.inputs.increment_type }}"
          
          # Utilise Python pour lire et incrémenter la version
          NEW_VERSION=$(python -c "
          import yaml
          import semver
          
          # Lire le fichier Chart.yaml
          chart_path = './Chart.yaml'
          with open(chart_path, 'r') as file:
              chart = yaml.safe_load(file)
          
          # Récupérer la version actuelle
          current_version = chart['version']
          print(f'Version actuelle: {current_version}')
          
          # Incrémenter la version
          version_obj = semver.VersionInfo.parse(current_version)
          
          if '$INCREMENT_TYPE' == 'major':
              new_version = str(version_obj.bump_major())
          elif '$INCREMENT_TYPE' == 'minor':
              new_version = str(version_obj.bump_minor())
          else:  # patch est la valeur par défaut
              new_version = str(version_obj.bump_patch())
          
          print(f'Nouvelle version: {new_version}')
          
          # Mettre à jour la version dans le chart
          chart['version'] = new_version
          
          # Écrire le fichier Chart.yaml
          with open(chart_path, 'w') as file:
              yaml.dump(chart, file, default_flow_style=False)
          
          # Retourner la nouvelle version pour l'utiliser dans le bash
          print(new_version)
          ")
          
          echo "Nouvelle version: $NEW_VERSION"
          
          # Commit les changements avec la nouvelle version
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add ./Chart.yaml
          git commit -m "Mettre à jour la version du Chart à $NEW_VERSION"
          git push origin main

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Package and Push Helm Chart
        run: |
          # Set variables
          CHART_DIR="."  # Chart is at root level
          
          # Lire les valeurs avec Python pour éviter les problèmes de yq
          CHART_NAME=$(python -c "import yaml; print(yaml.safe_load(open('./Chart.yaml'))['name'])")
          CHART_VERSION=$(python -c "import yaml; print(yaml.safe_load(open('./Chart.yaml'))['version'])")
          
          echo "Chart name: $CHART_NAME"
          echo "Chart version: $CHART_VERSION"
          
          # Package the chart locally
          helm package $CHART_DIR
          
          # Use lowercase repository owner (GitHub Container Registry requirement)
          REPO_OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          
          # Push the chart to GitHub Packages with proper formatting
          echo "Pushing to: oci://ghcr.io/${REPO_OWNER_LC}/charts"
          helm push "${CHART_NAME}-${CHART_VERSION}.tgz" "oci://ghcr.io/${REPO_OWNER_LC}/charts"
